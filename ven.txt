  
 activity.findOne({ partyId: "1" }, function (err, res) {

    if (res) {
      var array = res.activities;
      console.log(JSON.stringify(res))

      for (let indexJ = 0; indexJ < objectData.cases.length; indexJ++) {
        var requestObject = objectData.cases[indexJ].serviceRequests;

        for (let indexK = 0; indexK < requestObject.length; indexK++) {

          var activityArray = requestObject[indexK].activities;

          for(let indexL=0;indexL<activityArray.length ; indexL++){
            var element = activityArray[indexL];
            var newActivityObject = {
              id : element.id,
              traceId : '1',
              clientId : '1'
            }
            array.push(newActivityObject);
          } 
        }
      }

      activity.findOneAndUpdate({ partyId: "1" }, res, { new: true }, function (err, result) {
        console.log("Updated Final");
      });

    } else {

      var newObject = {};
      newObject.partyId = "1";
      newObject.activities = [];

      for (let indexJ = 0; indexJ < objectData.cases.length; indexJ++) {
        var requestObject = objectData.cases[indexJ].serviceRequests;

        for (let indexK = 0; indexK < requestObject.length; indexK++) {

          var activityArray = requestObject[indexK].activities;

          for(let indexL=0;indexL<activityArray.length ; indexL++){
            var element = activityArray[indexL];
            var newActivityObject = {
              id : element.id,
              traceId : '1',
              clientId : '1'
            }
            newObject.activities.push(newActivityObject);
          } 
        }
      }

      activity.findOneAndUpdate({ partyId: "1" }, newObject, { new: true, upsert: true }, function (err, doc, res) {
        if (doc) {
          console.log("inserted into DB")
        }
      });
    }
  });
  
const mongoose = require('mongoose');

const Schema = mongoose.Schema;

const ActivitySchema = new Schema({
    partyId: {
        type: String,
    },
     id: {
        type: String
    },
    activities: [
        {
            id: {
                type: String
            },
            traceId: {
                type: String,
            },
            clientId: {
                type: String,
            }
        }
    ]
})


const Activity = mongoose.model('Activity', ActivitySchema);
